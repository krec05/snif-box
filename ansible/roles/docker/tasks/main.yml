---
- name: Ensure old versions of Docker are not installed.
  package:
      name:
          - docker
          - docker-engine
      state: absent

- name: Ensure dependencies are installed.
  become: true
  apt:
      name:
          - apt-transport-https
          - ca-certificates
          - gnupg
          - curl
          - lsb-release
      state: present

- name: Add Docker apt key.
  become: true
  apt_key:
      url: "{{ docker_apt_gpg_key }}"
      state: present
  register: add_repository_key
  ignore_errors: "{{ docker_apt_ignore_key_error }}"

- name: Add Docker repository.
  become: true
  apt_repository:
      repo: "{{ docker_apt_repository }}"
      state: present
      update_cache: true

- name: Install Docker.
  become: true
  package:
      name: "{{ docker_package }}"
      state: "{{ docker_package_state }}"
  notify: restart docker
  ignore_errors: true

- name: Ensure Docker is started and enabled at boot.
  become: true
  service:
      name: docker
      state: "{{ docker_service_state }}"
      enabled: "{{ docker_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure handlers are notified now to avoid firewall conflicts.
  become: true
  meta: flush_handlers

- include_tasks: docker-compose.yml
  when: docker_install_compose | bool

- name: Ensure docker users are added to the docker group.
  become: true
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"
